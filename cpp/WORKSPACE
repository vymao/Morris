load("//:deps.bzl", "whisper", "extra_bazel_deps", "torch", "torch_deps")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

whisper()
extra_bazel_deps()
torch_deps()

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
rules_foreign_cc_dependencies()


load("@rules_python//python:repositories.bzl", "py_repositories")
py_repositories()

load("@rules_python//python:repositories.bzl", "python_register_toolchains")
python_register_toolchains(
    name = "python3_8",
    python_version = "3.8",
)

load("@python3_8//:defs.bzl", "interpreter")
load("@rules_python//python:pip.bzl", "pip_parse")
pip_parse(
    name = "pip_deps",
    python_interpreter_target = interpreter,
    requirements_lock = "@pytorch//:tools/build/bazel/requirements.txt",
)
load("@pip_deps//:requirements.bzl", "install_deps")
install_deps()

load("@rules_cuda//cuda:dependencies.bzl", "rules_cuda_dependencies")
rules_cuda_dependencies(with_rules_cc = False)



load("@pybind11_bazel//:python_configure.bzl", "python_configure")
python_configure(
    name = "local_config_python",
    python_interpreter_target = interpreter,
)

load("@pytorch//:tools/bazel.bzl", "rules")

load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock", "pnpm_repository")

npm_translate_lock(
    name = "npm",
    npmrc = "@aspect_rules_js//:.npmrc",
    pnpm_lock = "@aspect_rules_js//:pnpm-lock.yaml",
    # Set this to True when the lock file needs to be updated, commit the
    # changes, then set to False again.
    update_pnpm_lock = False,
    verify_node_modules_ignored = "@aspect_rules_js//:.bazelignore",
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")
rules_pkg_dependencies()

torch()